// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	"server/internal/pkg/models"

	mock "github.com/stretchr/testify/mock"
)

// NewMockEventDispatcher creates a new instance of MockEventDispatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEventDispatcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEventDispatcher {
	mock := &MockEventDispatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockEventDispatcher is an autogenerated mock type for the EventDispatcher type
type MockEventDispatcher struct {
	mock.Mock
}

type MockEventDispatcher_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEventDispatcher) EXPECT() *MockEventDispatcher_Expecter {
	return &MockEventDispatcher_Expecter{mock: &_m.Mock}
}

// Dispatch provides a mock function for the type MockEventDispatcher
func (_mock *MockEventDispatcher) Dispatch(event models.EventLike) {
	_mock.Called(event)
	return
}

// MockEventDispatcher_Dispatch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Dispatch'
type MockEventDispatcher_Dispatch_Call struct {
	*mock.Call
}

// Dispatch is a helper method to define mock.On call
//   - event models.EventLike
func (_e *MockEventDispatcher_Expecter) Dispatch(event interface{}) *MockEventDispatcher_Dispatch_Call {
	return &MockEventDispatcher_Dispatch_Call{Call: _e.mock.On("Dispatch", event)}
}

func (_c *MockEventDispatcher_Dispatch_Call) Run(run func(event models.EventLike)) *MockEventDispatcher_Dispatch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 models.EventLike
		if args[0] != nil {
			arg0 = args[0].(models.EventLike)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockEventDispatcher_Dispatch_Call) Return() *MockEventDispatcher_Dispatch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockEventDispatcher_Dispatch_Call) RunAndReturn(run func(event models.EventLike)) *MockEventDispatcher_Dispatch_Call {
	_c.Run(run)
	return _c
}
