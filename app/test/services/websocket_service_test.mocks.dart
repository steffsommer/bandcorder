// Mocks generated by Mockito 5.4.5 from annotations
// in bandcorder/test/services/websocket_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:bandcorder/services/connection_config.dart' as _i2;
import 'package:bandcorder/services/toast_service.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ConnectionConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectionConfig extends _i1.Mock implements _i2.ConnectionConfig {
  MockConnectionConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get host =>
      (super.noSuchMethod(
            Invocation.getter(#host),
            returnValue: _i3.dummyValue<String>(this, Invocation.getter(#host)),
          )
          as String);

  @override
  set host(String? _host) => super.noSuchMethod(
    Invocation.setter(#host, _host),
    returnValueForMissingStub: null,
  );

  @override
  int get port =>
      (super.noSuchMethod(Invocation.getter(#port), returnValue: 0) as int);

  @override
  set port(int? _port) => super.noSuchMethod(
    Invocation.setter(#port, _port),
    returnValueForMissingStub: null,
  );

  @override
  String getBaseUrl() =>
      (super.noSuchMethod(
            Invocation.method(#getBaseUrl, []),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.method(#getBaseUrl, []),
            ),
          )
          as String);
}

/// A class which mocks [ToastService].
///
/// See the documentation for Mockito's code generation for more information.
class MockToastService extends _i1.Mock implements _i4.ToastService {
  MockToastService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void toastSuccess(String? msg) => super.noSuchMethod(
    Invocation.method(#toastSuccess, [msg]),
    returnValueForMissingStub: null,
  );

  @override
  void toastError(String? msg) => super.noSuchMethod(
    Invocation.method(#toastError, [msg]),
    returnValueForMissingStub: null,
  );
}
